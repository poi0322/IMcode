// This is a quite general grammar close to C language. Lines 1, 2, 5 are comment lines and they are ignored.
//
L'  L  S  E  T  F BE BT BF
  id  num  rop +  -  *  /  %  =  ->  !   .   ,   &   ++  --  +=  -=  (   )   {   }  [   ]  :   ;   "   '   #   |    \   if  else while  do  for include  define  typedef  struct  int  char  float  double  void  return  case  then true false ||  &&  eof  $
//0   1    2   3  4  5  6  7  8  9   10  11  12  13  14  15  16  17  18  19  20  21 22 23  24  25  26  27  28  29   30  31  32   33     34  35  36       37      38       39      40   41    42     43      44    45      46    47   48   49    50  51  52   53
L' -> L
L -> S
L -> L ;  S
S -> { L }
S -> id = E
S -> if ( BE ) then S else S
S -> while ( BE ) do S
E -> T
E -> E + T
E -> E - T
T -> F
T -> T * F
T -> T / F
F -> id
F -> num
F -> ( E )
BE -> BT
BE -> BE || BT
BT -> BF
BT -> BT && BF
BF -> true
BF -> false
BF -> id rop id
BF -> ( BE )
BF -> ! BF